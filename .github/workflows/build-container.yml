name: Build and test container images

on:
  push:
  pull_request:
  repository_dispatch:
    types:
      - dispatch-build
  workflow_dispatch:

jobs:
  standard-builds:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        osg_series: ['3.6']
        repo: ['development', 'testing', 'release']
    steps:
      - uses: opensciencegrid/build-container-action@v0.5.0
        with:
          osg_series: ${{ matrix.osg_series }}
          repo: ${{ matrix.repo }}
          timestamp_tag: ${{ needs.make-date-tag.outputs.dtag }}
          osg_repo: ${{ matrix.repo }}

  special-builds:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        osg_series: ['3.6']
        os: ['al8', 'cuda_11_8_0']
        repo: ['development', 'testing', 'release']
    steps:
      - id: custom-image-name
        env:
          SERIES: ${{ matrix.osg_series }}
          REPO: ${{ matrix.repo }}
          OS: ${{ matrix.os }}
        run: |
          echo "output_image=${GITHUB_REPOSITORY}:${SERIES}-${OS}-${REPO}" >> ${GITHUB_OUTPUT}

      - uses: opensciencegrid/build-container-action@v0.5.0
        with:
          osg_series: ${{ matrix.osg_series }}
          osg_repo: ${{ matrix.repo }}
          base_os: ${{ matrix.os }}
          output_image: ${{ steps.custom-image-name.outputs.output_image }}

  test:
    runs-on: ubuntu-20.04
    needs: [make-date-tag, build]
    strategy:
      fail-fast: false
      matrix:
        osg_series: ['3.6']
        repo: ['development', 'testing', 'release']
        runtime: ['docker', 'singularity']
        cvmfs: ['bindmount', 'cvmfsexec']
        exclude:
          - runtime: singularity
            cvmfs: cvmfsexec
    steps:
      - uses: opensciencegrid/load-container-action@v0.5.0
        id: load-image
        with:
          osg_series: ${{ matrix.osg_series }}
          repo: ${{ matrix.repo }}
          timestamp_tag: ${{ needs.make-date-tag.outputs.dtag }}
      - name: Run tests
        env:
          CONTAINER_RUNTIME: ${{ matrix.runtime }}
          CVMFS_INSTALL: ${{ matrix.cvmfs }}
          CONTAINER_IMAGE: ${{ steps.load-image.outputs.image_tag }}
        run: |
          sudo ./tests/test_inside_gha.sh "$CONTAINER_RUNTIME" \
                                          "$CVMFS_INSTALL" \
                                          "$CONTAINER_IMAGE"
  push:
    runs-on: ubuntu-latest
    needs: [make-date-tag, build, test]
    if: >-
      github.ref == 'refs/heads/master' &&
      github.event_name != 'pull_request' &&
      github.repository_owner == 'opensciencegrid'
    strategy:
      matrix:
        osg_series: ['3.6']
        repo: ['development', 'testing', 'release']
        registry:
          - url: hub.opensciencegrid.org
            username: OSG_HARBOR_ROBOT_USER
            password: OSG_HARBOR_ROBOT_PASSWORD
          - url: docker.io
            username: DOCKER_USERNAME
            password: DOCKER_PASSWORD
    steps:
      - uses: opensciencegrid/push-container-action@v0.7.1
        with:
          osg_series: ${{ matrix.osg_series }}
          repo: ${{ matrix.repo }}
          timestamp_tag: ${{ needs.make-date-tag.outputs.dtag }}
          registry_url: ${{ matrix.registry.url }}
          registry_user: ${{ secrets[matrix.registry.username] }}
          registry_pass: ${{ secrets[matrix.registry.password] }}
